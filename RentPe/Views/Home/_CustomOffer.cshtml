@model RentPe.ViewModels.CustomOfferViewModel

<style>
    #actionButton.loader {
        position: relative;
    }

        #actionButton.loader:before {
            content: "";
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            border: 2px solid #f3f3f3;
            border-top: 2px solid #3498db;
            border-radius: 50%;
            width: 12px;
            height: 12px;
            animation: spin 0.8s linear infinite;
        }

    @@keyframes spin {
        0% {
            transform: translate(-50%, -50%) rotate(0deg);
        }

        100% {
            transform: translate(-50%, -50%) rotate(360deg);
        }
    }
</style>
@if (Model != null)
{
<div style="display: flex; justify-content: center; align-items: center; height: 90vh;">
    <div class="modal-content">
        <div class="modal-header">
            <div class="popup-text m-2 text-center">
                <div class="heading_s4">
                    <h4>Send Custom Offer for Rental Item</h4>
                </div>
                <p class="m-0">Please provide the following information to send a custom offer for the rental item.</p>
            </div>
        </div>
        <div class="modal-body">
            <form id="actionForm">
                <input type="hidden" name="Owner" id="Owner" value="@Model.OwnerFull.Id" />
                <input type="hidden" name="Rentee" id="Rentee" value="@Model.Rentee" />
                <div class="form-group mb-3">
                    <label>Item Name</label>
                    <input class="form-control" type="hidden" name="Item" value="@Model.ItemFull.ID">
                    <input class="form-control" type="text" disabled name="ItemName" value="@Model.ItemFull.ItemName">

                </div>
                <div class="row mb-3">
                    <div class="form-group col-6">
                        <label>Offering Rent (PKR)</label>
                        <input class="form-control" name="OfferedPrice" id="OfferedPrice" placeholder="Enter Your Offer">
                    </div>
                    <div class="form-group col-6">
                        <label for="Renting Period">Renting Period *</label>
                        <input id="RentingPeriod2" class="form-control" name="RentingPeriod2" type="number">
                        <input id="RentingPeriod" class="form-control" name="RentingPeriod" type="hidden">
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-6 mb-3">
                        <label>Renting Date</label>
                        @Html.TextBox("RentingDate", DateTime.Now, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "RentingDate", @class = "form-control", type = "date" })

                    </div>

                    <div class="form-group col-6 mb-3">
                        <label>Return Date</label>
                        @Html.TextBox("ReturnDate", DateTime.Now, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "ReturnDate", @class = "form-control", type = "date" })
                    </div>
                </div>

            </form>

            <div class="errorDiv">

            </div>
        </div>
        <div class="modal-footer">

            <button id="actionButton" type="button" class="btn btn-fill-out"><i class="fas fa-sharp fa-light fa-money-bill"></i> Send Offer</button>

            <button type="button" class="btn btn-danger" data-bs-dismiss="modal"><i class="fas fa-times mr-1"></i> Close</button>
        </div>
    </div>
    </div>
    }

    <script>

    function calculateRentingPeriod() {
        // Get the values of the "Available From" and "Available To" fields
        var availableFrom = new Date(document.getElementById('RentingDate').value);
        var availableTo = new Date(document.getElementById('ReturnDate').value);

        // Calculate the renting period in milliseconds
        var rentingPeriodMs = availableTo - availableFrom;

        // Convert the renting period to days
        var rentingPeriodDays = Math.ceil(rentingPeriodMs / (1000 * 60 * 60 * 24));

        // Display the renting period
        $("#RentingPeriod").val(rentingPeriodDays);
        $("#RentingPeriod2").val(rentingPeriodDays);
    }

    // Add onchange event listeners to the date pickers
    document.getElementById('RentingDate').onchange = calculateRentingPeriod;
    document.getElementById('ReturnDate').onchange = calculateRentingPeriod;

    $(document).ready(function () {
        calculateRentingPeriod();
    })

    $("#actionButton").click(function () {
        var button = document.getElementById('actionButton');
        button.classList.add('loader');
        button.disabled = true;
		$.ajax({
			url: '@Url.Action("SendCustomOffer", "Home")',
			type: "post",
			data: $("#actionForm").serialize()
		})
		.done(function (response) {
			if(response.success)
            {
                window.location.href = '@Url.Action("Dashboard", "User")';
			}
			else {
				$(".errorDiv").html(response.Message);
			}
		});
	});
    </script>
