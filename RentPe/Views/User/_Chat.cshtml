@model RentPe.ViewModels.UserDashboardViewModel

<script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
<script src="/signalr/hubs"></script>
@{
    ViewBag.Title = "_Chat";

}
<style>
    .chat-messages {
        list-style-type: none;
        padding: 0;
    }

    .message-info {
        text-align: center;
        margin-bottom: 5px;
    }

    .message-date {
        font-size: 12px;
        color: gray;
    }

    .sent-by-user {
        background-color: #DCF8C6;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        float: right;
    }

    .received-from-owner {
        background-color: #F6F6F6;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        float: left;
    }
</style>
<br />
<hr />

<div>
</div>

<!-- Display conversation messages -->
<div class="card" style=" max-height: 300px;  overflow-y: scroll;  ">
    <div class="card-body">
        <div class="row">
            <div class="col-md-2">
                <button class="back-button btn btn-sm btn-fill-out">< INBOX</button>
                <input type="hidden" id="Name" value="@Model.SignedInUser.Name" />
                <input type="hidden" id="txtFriendUniqueId" placeholder="Friend Unique ID" />
                <input type="hidden" id="ConnectionID" />
                <input type="hidden" id="FriendConnectionID" />


                @if (Model.SignedInUser.Id == Model.Rentee.Id)
                {
                    <input type="hidden" data-name="@Model.SignedInUser.Name" id="SignedInUserID" value="@Model.SignedInUser.Id" />
                    <input type="hidden" data-name="@Model.Owner.Name" id="RecievedID" value="@Model.Owner.Id" />
                }
                else
                {
                    <input type="hidden" data-name="@Model.SignedInUser.Name" id="SignedInUserID" value="@Model.SignedInUser.Id" />

                    <input type="hidden" data-name="@Model.Rentee.Name" id="RecievedID" value="@Model.Rentee.Id" />
                }



            </div>
            <div class="col-md-10">
                <h2 class="card-title text-center">
                    

                    @if (Model.Rentee.Id == Model.SignedInUser.Id)
                    {
                        @Model.Owner.Name
                        

                    }
                    else
                    {
                        @Model.Rentee.Name
                    }
                </h2>
            </div>
        </div>


        <hr />
        <ul class="chat-messages">
            @foreach (var message in Model.Chats)
            {
                <li class="@(message.SentBy == Model.SignedInUser.Id ? "sent-by-user row col-7" : "received-from-owner row col-7")">
                    <div class="message-date">
                        @message.Date
                        <br />
                        @if (message.SentBy == Model.SignedInUser.Id)
                        {
                            @Model.Rentee.Name

                        }
                        else
                        {
                            @Model.Owner.Name

                        }
                    </div>
                    <div class="message-info">
                    </div>
                    <div class="message-content">
                        @message.Message
                        @if (message.Attachments != null && message.Attachments != "")
                        {
                            <br />
                            <img src="@message.Attachments" style="height:200px" />
                        }
                    </div>
                </li>
            }
        </ul>

    </div>
    <div class="form-group">
        <div class="input-group">
            <input type="text" id="Message" name="Message" placeholder="Write your message" class="form-control" />
            <div class="input-group-append">
                <button type="button" id="attachmentButton" class="btn btn-sm btn-fill-out rounded-0"><i style="font-size:18px;" class="fas fa-solid fa-paperclip"></i></button>
                <button type="button" id="sendButton" class="btn btn-sm btn-fill-out rounded-0"><i style="font-size:18px;" class="fas fa-sharp fa-solid fa-paper-plane"></i></button>
            </div>
        </div>
    </div>
    <div class="form-group">
        <input type="file" id="imageUpload" name="Image" style="display: none;" />
    </div>
    <div class="form-group">
        <img id="productimage" src="" style="display: none; max-width: 200px; max-height: 200px;" />
        <input type="hidden" id="ImageURL" name="ImageURL" />
    </div>

    
</div>
<div id="messagesPvt">

</div>


<script>

    $(function () {

        var chat = $.connection.letsChatHub;

        /*------------ Declare a function on the chat hub so the server can invoke it for Private Chat------------------*/
        chat.client.addNewPrivateMessageToPage = function (name, message, senderconnId) {
            console.log("you got a new message " + message);

            var newLi = $('<li>').addClass('received-from-owner row col-7');
            var messageDate = $('<div>').addClass('message-date').text(currentTime());
            var messageInfo = $('<div>').addClass('message-info');
            var messageContent = $('<div>').addClass('message-content').text(/*name + ' : ' + */message);
            
            newLi.append(messageDate, messageInfo, messageContent);
            $('.chat-messages').append(newLi);
            $("#Message").val('');


        };
        $.connection.hub.start().done(function () {
            $("#sendButton").prop('disabled', true);
            //Who Ever loggeed in get's their ConnectionID saved in their DB
            $("#ConnectionID").val($.connection.hub.id);
            var ConnectionIDOFCurrentSignedInUser = $("#ConnectionID").val();
            var SignedInUserID = $("#SignedInUserID").val();

            $.ajax({
                url: '@Url.Action("UpdateConnectionID", "User")',
                type: "post",
                data: { ConnectionID: ConnectionIDOFCurrentSignedInUser, UserID: SignedInUserID }
            })
                .done(function (response) {
                    if (response.success) {
                        console.log("Logged In UserID saved in DB");
                        $("#sendButton").prop('disabled', false);

                    }
                    else {
                        $(".errorDiv").html(response.Message);
                    }
                });



            function getConnectionIDByUserID(userID) {
                return new Promise(function (resolve, reject) {
                    $.ajax({
                        url: '@Url.Action("GetConnectionIDByUserID", "User")',
                        type: "post",
                        data: { UserID: userID }
                    })
                        .done(function (response) {
                            if (response.success) {
                                console.log("Got the ConnectionID: " + response.ConnectionID);
                                resolve(response.ConnectionID);
                            }
                            else {
                                $(".errorDiv").html(response.Message);
                                reject(response.Message);
                            }
                        })
                        .fail(function (error) {
                            console.log("An error occurred: " + error);
                            reject(error);
                        });
                });
            }


            $("#sendButton").click(function () {
                var message = $("input[name='Message']").val();
                var imageURL = $("#ImageURL").val();
                var receivedBy = $("#RecievedID").val();
                var sentBy = $("#SignedInUserID").val();
                var RecieverID = $("#RecievedID").val();

                getConnectionIDByUserID(RecieverID)
                    .then(function (friendID) {
                        chat.server.sendPrivateMessage({ Name: $('#Name').val(), SentBy: sentBy, RecievedBy: receivedBy, Attachments: imageURL, Message: message, FriendUniqueId: friendID });
                        console.log("Message Sent");
                        // openChat(SentBy, RecievedBy);
                        var newLi = $('<li>').addClass('sent-by-user row col-7');
                        var messageDate = $('<div>').addClass('message-date').text(currentTime());
                        var messageInfo = $('<div>').addClass('message-info');
                        var messageContent = $('<div>').addClass('message-content').text(/*name + ' : ' + */message);

                        newLi.append(messageDate, messageInfo, messageContent);
                        $('.chat-messages').append(newLi);
                        $("#Message").val('');
                    })
                    .catch(function (error) {
                        console.log("Error retrieving connection ID: " + error);
                    });
            });



        });
    });





    $(document).ready(function () {



        $("#attachmentButton").click(function () {
            $("#imageUpload").click();
        });
        $("#imageUpload").change(function () {
            var element = this;
            var formData = new FormData();
            var totalFiles = element.files.length;

            for (var i = 0; i < totalFiles; i++) {
                var file = element.files[i];
                formData.append("Photo", file);
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("UploadImage", "Shared")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false
            })
                .done(function (response) {
                    console.log(response);
                    if (response.success) {
                        $("#ImageURL").val(response.DocURL);
                        $("#productimage").attr("src", response.DocURL).show();
                    }
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("FAIL");
                });
        });

        // Start the SignalR connection
            // Set up the click event for the send button

    });


    function currentTime() {
        return new Date().toLocaleString('en-GB', {
            day: 'numeric',
            month: 'short',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        });
    }
</script>