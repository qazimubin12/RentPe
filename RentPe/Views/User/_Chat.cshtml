@model RentPe.ViewModels.UserDashboardViewModel

<script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
<script src="/signalr/hubs"></script>
@{
    ViewBag.Title = "_Chat";

}
<style>
    .chat-messages {
        list-style-type: none;
        padding: 0;
    }

    .message-info {
        text-align: center;
        margin-bottom: 5px;
    }

    .message-date {
        font-size: 12px;
        color: gray;
    }

    .sent-by-user {
        background-color: #DCF8C6;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        float: right;
    }

    .received-from-owner {
        background-color: #F6F6F6;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        float: left;
    }
</style>
<br />
<hr />

<div>
</div>

<!-- Display conversation messages -->
<div class="card"   ">
    <div class="card-body">
        <div class="row">
            <div class="col-md-2">
                <button class="back-button btn btn-sm btn-fill-out">< INBOX</button>
                <input type="hidden" id="Name" value="@Model.SignedInUser.Name" />
                <input type="hidden" data-name="@Model.Rentee.Name" id="SNRentee" value="@Model.Rentee.Id" />

                <input type="hidden" id="txtFriendUniqueId" placeholder="Friend Unique ID" />
                <input type="hidden" id="ConnectionID" />
                <input type="hidden" id="FriendConnectionID" />


                @if (Model.SignedInUser.Id == Model.Rentee.Id)
                {
                    <input type="hidden" data-name="@Model.SignedInUser.Name" id="SignedInUserID" value="@Model.SignedInUser.Id" />
                    <input type="hidden" data-name="@Model.Owner.Name" id="RecievedID" value="@Model.Owner.Id" />
                }
                else
                {
                    <input type="hidden" data-name="@Model.SignedInUser.Name" id="SignedInUserID" value="@Model.SignedInUser.Id" />

                    <input type="hidden" data-name="@Model.Rentee.Name" id="RecievedID" value="@Model.Rentee.Id" />
                }



            </div>
            <div class="col-md-10">
                <h2 class="card-title text-center">


                    @if (Model.Rentee.Id == Model.SignedInUser.Id)
                    {
                        @Model.Owner.Name <span>- @Model.Ad.ItemName</span>


                    }
                    else
                    {
                        @Model.Rentee.Name <span>- @Model.Ad.ItemName</span>
                    }
                </h2>
            </div>
        </div>
        <input type="hidden" value="@Model.Ad.MainImage" id="AdMainImage" />
        <input type="hidden" value="@Model.Ad.ID" id="Item" />
        @if (Model.Rentee.Id == Model.SignedInUser.Id)
        {
            <input type="hidden" id="RenteeDeets" value="@Model.Rentee.Name" />
        }
            <hr />
        <ul id="messagingChatBox" style=" max-height: 300px;  overflow-y: scroll;overflow-x:clip;" class="chat-messages">
            @foreach (var message in Model.MainChats)
            {
                <li class="@(message.Chats.SentBy == Model.SignedInUser.Id ? "sent-by-user row col-7" : "received-from-owner row col-7")">
                    <div class="message-date">
                        @message.Chats.Date
                        <br />
                        @message.Chats.SentByName
                    </div>
                    <div class="message-info">
                    </div>
                    <div class="message-content">
                        @message.Chats.Message
                        @if (message.Chats.Attachments != null && message.Chats.Attachments != "")
                        {
                            <br />
                            <img src="@message.Chats.Attachments" style="height:200px" />
                            <br />
                        }
                    </div>

                    @if (message.CustomOffer != null)
                    {
                        <div class="offer-card">
                            <div class="offer-details">
                                <h3>Offer</h3>
                                <p class="offer-info">
                                    @*Renting Period: <span class="renting-period">@message.CustomOffer.RentingPeriod</span><br>*@
                                    Renting Date: <span class="renting-date">@message.CustomOffer.RentingDate.ToShortDateString()</span><br>
                                    Return Date: <span class="return-date">@message.CustomOffer.ReturnDate.ToShortDateString()</span><br>
                                    Offered Price: <span class="offered-price">@message.CustomOffer.OfferedPrice</span><br>
                                    Status: <span class="status">@message.CustomOffer.Status</span>
                                </p>
                            </div>
                            <div class="offer-actions">
                                <image src="@Model.Ad.MainImage" style="height:200px;"
                                @if (message.CustomOffer.Status == "PENDING")
                                {
                                    <div class="buttons-container">
                                        @if (Model.SignedInUser.Id == message.CustomOffer.Rentee)
                                        {
                                            <button id="@message.CustomOffer.ID" class="withdraw-button btn btn-sm btn-fill-out">Withdraw</button>
                                        }
                                        else
                                        {
                                            <button id="@message.CustomOffer.ID" class="accept-button btn btn-sm btn-fill-out">Accept</button>
                                            <button id="@message.CustomOffer.ID" class="decline-button btn btn-sm btn-fill-out">Decline</button>
                                        }
                                    </div>
                                }
                            </div>
                        </div>

                    }

                </li>
            }
        </ul>

    </div>
    <div  id="OfferControls" style="display:none;"  class="mb-3 mx-3">
        <div class="card">
            <div class="card-body">
                <h2 class="card-title">Send New Offer</h2>
                <div class="form-group">
                    <input type="text" id="OfferedPrice" name="OfferedPrice" placeholder="Write your Offered Price" class="form-control" />
                    <label for="start_date">Renting  Date:</label>
                    <input type="hidden" id="RentingPeriod" />
                    @Html.TextBox("RentingDate", DateTime.Now, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "RentingDate", @class = "form-control", type = "date" })
                    <label for="end_date">Return Date:</label>
                    @Html.TextBox("ReturnDate", DateTime.Now, "{0:yyyy-MM-dd}", new { @style = "width:100%", @id = "ReturnDate", @class = "form-control", type = "date" })
                </div>
            </div>
        </div>
        
        <br />
    </div>
    <div class="form-group">
        <div class="input-group">
            <input type="text" id="Message" name="Message" placeholder="Write your message" class="form-control" />
            <div class="input-group-append">
                <button type="button" id="attachmentButton" class="btn btn-sm btn-fill-out rounded-0"><i style="font-size:18px;" class="fas fa-solid fa-paperclip"></i></button>
                <button type="button" id="sendButton" class="btn btn-sm btn-fill-out rounded-0"><i style="font-size:18px;" class="fas fa-sharp fa-solid fa-paper-plane"></i></button>
                @if (Model.SignedInUser.Id == Model.Rentee.Id)
                {
                <button type="button" onclick="toggleOfferControls()" id="ToggleOfferControls" class="btn btn-sm btn-fill-out rounded-0"><i class="fas fa-sharp fa-light fa-money-bill"></i></button>
                }
            </div>
        </div>
    </div>
    <div class="form-group">
        <input type="file" id="imageUpload" name="Image" style="display: none;" />
    </div>
    <div class="form-group">
        <img id="productimage" src="" style="display: none; max-width: 200px; max-height: 200px;" />
        <input type="hidden" id="ImageURL" name="ImageURL" />
    </div>

    
</div>
<div id="messagesPvt">

</div>


<script>

    var SNUSer = $("#SignedInUserID").val();
    var SNRENTEE = $("#SNRentee").val();
    document.getElementById('ReturnDate').onchange = calculateRentingPeriod;
    document.getElementById('RentingDate').onchange = calculateRentingPeriod;
    $(function () {

        var chat = $.connection.letsChatHub;

        /*------------ Declare a function on the chat hub so the server can invoke it for Private Chat------------------*/
        chat.client.addNewPrivateMessageToPage = function (name, attachment, message, senderconnId) {
            console.log("you got a new message " + message);

            var newLi = $('<li>').addClass('received-from-owner row col-7');
            var messageDate = $('<div>').addClass('message-date').text(currentTime());


            var senderName = $('<div>').text(name);


            messageDate.append(senderName);
            var messageInfo = $('<div>').addClass('message-info');
            var messageContent = $('<div>').addClass('message-content').text(message);
            if (attachment != null && attachment != "") {
                var image = $('<img>').attr('src', attachment).css('height', '200px');
                messageContent.append($('<br>'), image);
            }
            newLi.append(messageDate, messageInfo, messageContent);
            $('.chat-messages').append(newLi);
            $("#Message").val('');
            $("#productimage").attr("src", "");

        };

        chat.client.addNewPrivateOfferToPage = function (id, name, rentingPeriod, rentingDate, returnDate, OfferedPrice, ItemName, Status, attachment, message, senderconnId) {
            console.log("you got a new Offer " + message);
            var offerCard = $('<div>').addClass('offer-card');
            var offerDetails = $('<div>').addClass('offer-details');
            var offerTitle = $('<h3>').addClass('offer-title').text('Offer');
            var offerInfo = $('<p>').addClass('offer-info').html('Renting Date: <span class="renting-date">' + rentingDate + '</span><br>' +
                'Return Date: <span class="return-date">' + returnDate + '</span><br>' +
                'Offered Price: <span class="offered-price">' + OfferedPrice + '</span><br>' +
                'Status: <span class="status">' + Status + '</span>');
            offerDetails.append(offerTitle, offerInfo);

            var offerActions = $('<div>').addClass('offer-actions');
            var productImage = $('<img>').attr('src', attachment).addClass('product-image').attr('alt', 'Product Image');

            var offerMessage = $('<p>').addClass('offer-message').text(message);
            var buttonsContainer = $('<div>').addClass('buttons-container');

            if (SNUSer == SNRENTEE) {
                var withdraw = $('<button>').addClass('withdraw-button btn btn-sm btn-fill-out').text('Withdraw').attr('id', id).on('click', function () {

                    updateOfferStatus($(this).attr('id'), 'WITHDRAWN');
                    buttonsContainer.append(withdraw);
                });
            } else {
                var acceptButton = $('<button>').addClass('accept-button btn btn-sm btn-fill-out').text('Accept').attr('id', id).on('click', function () {
                    updateOfferStatus($(this).attr('id'), 'ACCEPTED');
                });
                var declineButton = $('<button>').addClass('decline-button btn btn-sm btn-fill-out').text('Decline').attr('id', id).on('click', function () {
                    updateOfferStatus($(this).attr('id'), 'DECLINED');
                });
                buttonsContainer.append(acceptButton, declineButton);
            }




            buttonsContainer.append(acceptButton, declineButton);
            offerActions.append(productImage, offerMessage, buttonsContainer);

            offerCard.append(offerDetails, offerActions);

            // Append the offer card to a container element in your page
            var newLi = $('<li>').addClass('sent-by-user row col-7');
            $(newLi).append(offerCard);
            $('.chat-messages').append(newLi);

            $("#Message").val('');
            $("#productimage").attr("src", "");
            if (SNUSer == SNRENTEE) {
                $("#OfferControls").toggle();
            }
        };

        chat.client.updateStatusToPage = function (ID, Status, senderconnId) {
            console.log("Offer: " + Status)
        }

        $.connection.hub.start().done(function () {
            $("#sendButton").prop('disabled', true);
            //Who Ever loggeed in get's their ConnectionID saved in their DB
            $("#ConnectionID").val($.connection.hub.id);
            var ConnectionIDOFCurrentSignedInUser = $("#ConnectionID").val();
            var SignedInUserID = $("#SignedInUserID").val();

            $.ajax({
                url: '@Url.Action("UpdateConnectionID", "User")',
                type: "post",
                data: { ConnectionID: ConnectionIDOFCurrentSignedInUser, UserID: SignedInUserID }
            })
                .done(function (response) {
                    if (response.success) {
                        console.log("Logged In UserID saved in DB");
                        $("#sendButton").prop('disabled', false);

                    }
                    else {
                        $(".errorDiv").html(response.Message);
                    }
                });


        function getConnectionIDByUserID(userID) {
                         return new Promise(function (resolve, reject) {
                             $.ajax({
                                 url: '@Url.Action("GetConnectionIDByUserID", "User")',
                                 type: "post",
                                 data: { UserID: userID }
                             })
                                 .done(function (response) {
                                     if (response.success) {
                                         console.log("Got the ConnectionID: " + response.ConnectionID);
                                         resolve(response.ConnectionID);
                                     }
                                     else {
                                         $(".errorDiv").html(response.Message);
                                         reject(response.Message);
                                     }
                                 })
                                 .fail(function (error) {
                                     console.log("An error occurred: " + error);
                                     reject(error);
                                 });
                         });
            };


        $('.accept-button').click(function () {
            var RecieverID = $("#RecievedID").val();

            var offerId = $(this).attr('id');
            var confirmAccept = confirm("Are you sure you want to accept this offer?");

            if (confirmAccept) {
                // Clear the input fields
                getConnectionIDByUserID(RecieverID).then(function (friendID) {
                    chat.server.sendAcceptRequest({ FriendUniqueId: friendID, OfferID: offerId, status: 'ACCEPTED' });
                });

                updateOfferStatus(offerId, "ACCEPTED");

            }
        });

        $('.decline-button').click(function () {
            var RecieverID = $("#RecievedID").val();
            var offerId = $(this).attr('id');
            var confirmDecline = confirm("Are you sure you want to decline this offer?");

            if (confirmDecline) {
                // Clear the input fields
                getConnectionIDByUserID(RecieverID).then(function (friendID) {
                    chat.server.sendDeclineRequest({ FriendUniqueId: friendID, OfferID: offerId, status: 'DECLINED' });
                });

                updateOfferStatus(offerId, "DECLINED");
            }


        });

        $('.withdraw-button').click(function () {

                var RecieverID = $("#RecievedID").val();
                var status = "WITHDRAWN";
                var offerId = $(this).attr('id');
                var confirmWithdraw = confirm("Are you sure you want to withdraw this offer?");

                if (confirmWithdraw) {
                    // Clear the input fields
                    getConnectionIDByUserID(RecieverID)
                        .then(function (friendID) {

                            chat.server.sendwithdrawalrequest({ OfferID: offerId, status: status, FriendUniqueId: friendID });
                            console.log("tried withdrawing");

                        })
                        .catch(function (error) {
                            console.log("Error retrieving connection ID: " + error);
                        });

                    // Clear the input fields

                    updateOfferStatus(offerId, "WITHDRAWN");
                }


            });


            $("#sendButton").click(function () {
                var message = $("input[name='Message']").val();
                var imageURL = $("#ImageURL").val();
                var receivedBy = $("#RecievedID").val();
                var sentBy = $("#SignedInUserID").val();
                var RecieverID = $("#RecievedID").val();
                var Name = $('#Name').val();
                var RentingDate = $("#RentingDate").val();
                var RenteeDeets = $("#RenteeDeets").val();
                var Item = $("#Item").val();
                var AdMain = $("#AdMainImage").val();
                var OfferedPrice = $("#OfferedPrice").val();
                var ReturnDate = $("#ReturnDate").val();
                if ($("#OfferControls").is(":visible")) {

                    // Clear the input fields
                    getConnectionIDByUserID(RecieverID)
                        .then(function (friendID) {
                            chat.server.sendPrivateOffer({ Name: Name, Item: Item, OfferedPrice: OfferedPrice, RentingDate: RentingDate, ReturnDate: ReturnDate, SentBy: sentBy, RecievedBy: receivedBy, Attachments: imageURL, Message: message, FriendUniqueId: friendID });
                            console.log("Offer Sent");
                            var offerCard = $('<div>').addClass('offer-card');
                            var offerDetails = $('<div>').addClass('offer-details');
                            var offerTitle = $('<h3>').addClass('offer-title').text('New Custom Offer');
                            var offerInfo = $('<p>').addClass('offer-info').html('Renting Date: <span class="renting-date">' + $("#RentingDate").val() + '</span><br>' +
                                'Return Date: <span class="return-date">' + $("#ReturnDate").val() + '</span><br>' +
                                'Offered Price: <span class="offered-price">' + $("#OfferedPrice").val() + '</span><br>' +
                                'Status: <span class="status">PENDING</span>');
                            offerDetails.append(offerTitle, offerInfo);

                            var offerActions = $('<div>').addClass('offer-actions');
                            var productImage = $('<img>').attr('src', AdMain).addClass('product-image').attr('alt', 'Product Image NEW');
                            var offerMessage = $('<p>').addClass('offer-message').text($("Message").val());
                            var buttonsContainer = $('<div>').addClass('buttons-container');

                            if (SNUSer == SNRENTEE) {
                                var withdraw = $('<button>').addClass('withdraw-button btn btn-sm btn-fill-out').text('Withdraw');
                                buttonsContainer.append(withdraw);
                            } else {
                                var acceptButton = $('<button>').addClass('accept-button btn btn-sm btn-fill-out').text('Accept');
                                var declineButton = $('<button>').addClass('decline-button btn btn-sm btn-fill-out').text('Decline');
                                buttonsContainer.append(acceptButton, declineButton);
                            }


                            offerActions.append(productImage, offerMessage, buttonsContainer);

                            offerCard.append(offerDetails, offerActions);

                            // Append the offer card to a container element in your page
                            var newLi = $('<li>').addClass('sent-by-user row col-7');
                            $(newLi).append(offerCard);
                            $('.chat-messages').append(newLi);
                            console.log("offer Created");

                            $("#Message").val('');
                            $("#productimage").attr("src", "");
                            if (SNUSer == SNRENTEE) {
                                $("#OfferControls").toggle();
                            }


                        })
                        .catch(function (error) {
                            console.log("Error retrieving connection ID: " + error);
                        });
                }
                else {

                    getConnectionIDByUserID(RecieverID)
                        .then(function (friendID) {
                            chat.server.sendPrivateMessage({ Name: $('#Name').val(), SentBy: sentBy, RecievedBy: receivedBy, Attachments: imageURL, Item: $("#Item").val(), Message: message, FriendUniqueId: friendID });
                            console.log("Message Sent");
                            // openChat(SentBy, RecievedBy);
                            var newLi = $('<li>').addClass('sent-by-user row col-7');
                            var messageDate = $('<div>').addClass('message-date').text(currentTime());
                            var messageInfo = $('<div>').addClass('message-info');
                            var messageContent = $('<div>').addClass('message-content').text(/*name + ' : ' + */message);
                            var senderName = $('<div>').text($('#Name').val());
                            messageDate.append(senderName);
                            if (imageURL != null && imageURL != "") {
                                var image = $('<img>').attr('src', imageURL).css('height', '200px');
                                messageContent.append($('<br>'), image);
                            }
                            newLi.append(messageDate, messageInfo, messageContent);
                            $('.chat-messages').append(newLi);
                            $("#Message").val('');
                            $("#productimage").attr("src", "");





                        })
                        .catch(function (error) {
                            console.log("Error retrieving connection ID: " + error);
                        });


                }
                ScrollToEnd();
            });



        });


    });



    function updateOfferStatus(offerId, status) {

        if (status == "ACCEPTED") {
            $('.accept-button[id="' + offerId + '"]').closest('.offer-card').find('.status').text(response.updatedStatus);
            $('.accept-button[id="' + offerId + '"]').closest('.buttons-container').hide();
            alert("Offer Accepted");
        }
        else if (status == "DECLINED") {
            $('.decline-button[id="' + offerId + '"]').closest('.offer-card').find('.status').text(response.updatedStatus);
            $('.decline-button[id="' + offerId + '"]').closest('.buttons-container').hide();
            alert("Offer Declined");
        } else {

            $('.withdraw-button[id="' + offerId + '"]').closest('.offer-card').find('.status').text(response.updatedStatus);
            $('.withdraw-button[id="' + offerId + '"]').closest('.buttons-container').hide();
            alert("Offer Withdrawn");
        }
    }

    $(document).ready(function () {
        ScrollToEnd();


        $("#attachmentButton").click(function () {
            $("#imageUpload").click();
        });
        $("#imageUpload").change(function () {
            var element = this;
            var formData = new FormData();
            var totalFiles = element.files.length;

            for (var i = 0; i < totalFiles; i++) {
                var file = element.files[i];
                formData.append("Photo", file);
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("UploadImage", "Shared")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false
            })
                .done(function (response) {
                    console.log(response);
                    if (response.success) {
                        $("#ImageURL").val(response.DocURL);
                        $("#productimage").attr("src", response.DocURL).show();
                    }
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("FAIL");
                });
        });

        // Start the SignalR connection
            // Set up the click event for the send button

    });

    // Accept button click event


    // Function to update offer status using Ajax


    function ScrollToEnd() {

        var chatBox = document.getElementById('messagingChatBox');

        // Get the last message element
        var lastMessage = chatBox.querySelector('li:last-child');

        // Scroll the chat box to the last message
        lastMessage.scrollIntoView();

    }


    function currentTime() {
        return new Date().toLocaleString('en-GB', {
            day: 'numeric',
            month: 'short',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit'
        });
    }

    function toggleOfferControls() {
        $("#OfferControls").toggle(); // or $("#OfferControls").toggleClass("hidden");
        if ($("#OfferControls").is(":visible")) {
            // Clear the input fields
            $("#OfferedPrice").val("");
            $("#RentingDate").val("");
            $("#ReturnDate").val("");
        }
    }




    function calculateRentingPeriod() {
        // Get the values of the "Available From" and "Available To" fields
        var availableFrom = new Date(document.getElementById('RentingDate').value);
        var availableTo = new Date(document.getElementById('ReturnDate').value);

        // Calculate the renting period in milliseconds
        var rentingPeriodMs = availableTo - availableFrom;

        // Convert the renting period to days
        var rentingPeriodDays = Math.ceil(rentingPeriodMs / (1000 * 60 * 60 * 24));

        // Display the renting period
        $("#RentingPeriod").val(rentingPeriodDays);
    }


</script>